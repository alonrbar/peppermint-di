{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\createOptions.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\errors\\index.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\errors\\nestedError.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\errors\\resolveError.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\errors\\typeInferenceError.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\i.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\index.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\injectable.ts","C:\\Users\\Alon\\Documents\\devel\\resolver-js\\src\\resolver.ts","external \"reflect-metadata\""],"names":[],"mappings":"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","file":"resolver-js.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"resolver-js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"resolver-js\"] = factory();\n\telse\n\t\troot[\"resolver-js\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class CreateOptions {\r\n    /**\r\n     * If set to 'true' will treat unregistered dependencies as optional\r\n     * parameters and set their value to undefined.\r\n     * \r\n     * Default value: false\r\n     */\r\n    public optionalParameters = false;\r\n    /**\r\n     * Set to 'false' if you don't want the injector to automatically try to\r\n     * construct unregistered constructors.\r\n     *\r\n     * Default value: true\r\n     */\r\n    public constructUnregistered = true;\r\n}","export * from './nestedError';\nexport * from './resolveError';\nexport * from './typeInferenceError';\n","/**\r\n * An Error that preserves inner Error's stack trace\r\n */\r\nexport class NestedError extends Error {\r\n\r\n    private static createStack(myStack: string, innerError?: Error): string {\r\n\r\n        if (!innerError)\r\n            return myStack;\r\n\r\n        myStack += '\\n------------------------------------------------\\n';\r\n        myStack += 'Inner Error: ';\r\n\r\n        if (innerError instanceof Error) {\r\n            myStack += innerError.stack;\r\n        } else {\r\n            myStack += (innerError as any).toString();\r\n        }\r\n\r\n        return myStack;\r\n    }\r\n\r\n    constructor(message: string, innerError?: Error) {\r\n        super(message);\r\n\r\n        this.stack = NestedError.createStack(this.stack, innerError);\r\n\r\n        // typescript hack: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, NestedError.prototype);\r\n    }\r\n}","import { NestedError } from './nestedError';\r\n\r\nclass ResolveError extends NestedError {\r\n\r\n    constructor(key: string, innerErr: Error) {\r\n        super(`Failed to resolve '${key}'.`, innerErr);\r\n\r\n        // typescript hack: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, ResolveError.prototype);\r\n    }\r\n\r\n}\r\n\r\nexport { ResolveError };","export class TypeInferenceError extends Error {\r\n    constructor(message?: string) {\r\n        super(message);\r\n\r\n        // typescript hack: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, TypeInferenceError.prototype);\r\n    }\r\n}","import \"reflect-metadata\";\r\n\r\n/**\r\n * Declare the interface type of a parameter.\r\n *\r\n * Example:\r\n * \r\n * class MyClass {\r\n *    constructor(@i(IMyService) myService: IMyService) {\r\n *      ...\r\n *    }\r\n * }\r\n * \r\n * To understand more about how or why it works read here:\r\n * https://www.typescriptlang.org/docs/handbook/decorators.html#metadata\r\n */\r\nexport function i(interfaceSymbol: symbol): ParameterDecorator {\r\n    return (target: object, parameterName: string | symbol, parameterIndex: number) => {\r\n        const paramTypes = Reflect.getMetadata('design:paramtypes', target);\r\n        paramTypes[parameterIndex] = interfaceSymbol;\r\n        Reflect.defineMetadata('design:paramtypes', paramTypes, target);\r\n    };\r\n}","export * from './errors';\nexport * from './createOptions';\nexport * from './i';\nexport * from './injectable';\nexport * from './resolver';\nexport * from './types';\n","/**\r\n * Indicates that the decorated class can have it's constructor parameters injected.\r\n */\r\nexport function injectable(constructor: Function): void {   // tslint:disable-line:ban-types\r\n    // no-op\r\n}","import { ResolveError, TypeInferenceError } from './errors';\r\nimport { ContainerKey, Constructor, Factory } from './types';\r\nimport 'reflect-metadata';\r\nimport { CreateOptions } from './createOptions';\r\n\r\n// tslint:disable:ban-types\r\n\r\nfunction emptyLogger(msg: string) {\r\n    // noop\r\n}\r\n\r\n/**\r\n * A dependency injection container\r\n *\r\n * Based on: \r\n * https://stackoverflow.com/questions/20058391/javascript-dependency-injection\r\n * http://www.yusufaytas.com/dependency-injection-in-javascript/\r\n */\r\nexport class Resolver {\r\n\r\n    private static get canReflect(): boolean {\r\n        if (Resolver._canReflect === undefined) {\r\n            try {\r\n                Resolver._canReflect = (Reflect && Reflect.construct) ? true : false;\r\n            } catch (e) {\r\n                Resolver._canReflect = false;\r\n            }\r\n        }\r\n        return Resolver._canReflect;\r\n    }\r\n    private static _canReflect: boolean;    \r\n\r\n    private readonly logger: (msg: string) => void;\r\n    private readonly factories = new Map<ContainerKey<any>, Factory<any>>();\r\n    private readonly potentialSingletons = new Map<ContainerKey<any>, Factory<any>>();\r\n    private readonly singletons = new Map<ContainerKey<any>, any>();\r\n\r\n    /**\r\n     * @param logger e.g. console.log\r\n     */\r\n    constructor(logger?: (msg: string) => void) {\r\n        this.logger = logger || emptyLogger;\r\n    }\r\n\r\n    // --- public methods --- //\r\n\r\n    public register<T>(key: ContainerKey<T>, factory?: Factory<T>): void {\r\n        this.validateKey(key);\r\n\r\n        const keyStr = this.getKeyString(key);\r\n\r\n        if ((factory === null || factory === undefined) && typeof key === 'function') {\r\n            this.logger(`Registering '${keyStr}' (factory callback)'`);\r\n            this.factories.set(key, () => {\r\n                return this.resolveCTor(key, null, null);\r\n            });\r\n\r\n        } else if (factory) {\r\n            this.logger(`Registering '${keyStr}'.`);\r\n            this.factories.set(key, factory);\r\n\r\n        } else {\r\n            throw new Error(`Missing argument '${factory}'.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Register singleton\r\n     *\r\n     * @param value Singleton object or a constructor function that will be\r\n     * called once and it's result will be cached and re-served.\r\n     */\r\n    public registerSingle<T>(key: ContainerKey<T>, value?: T | Factory<T>): void {\r\n        this.validateKey(key);\r\n\r\n        const keyStr = this.getKeyString(key);\r\n\r\n        if ((value === null || value === undefined) && typeof key === 'function') {\r\n            this.logger(`Registering '${keyStr}' as singleton (factory callback)`);\r\n            this.potentialSingletons.set(key, () => {\r\n                return this.resolveCTor(key, null, null);\r\n            });\r\n\r\n        } else if (typeof value === 'object') {\r\n            this.logger(`Registering '${keyStr}' as singleton (value)`);\r\n            this.singletons.set(key, value);\r\n\r\n        } else if (typeof value === 'function') {\r\n            this.logger(`Registering '${keyStr}' as singleton (factory callback)`);\r\n            this.potentialSingletons.set(key, value);\r\n\r\n        } else {\r\n            throw new Error(`Invalid argument '${\"value\"}'. Expected object or function.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resolve registered dependencies. \r\n     * This method can also resolve non-registered dependencies by calling the supplied constructor function.\r\n     *\r\n     * @param {object} [params] The supplied parameters will be used directly instead of being resolved\r\n     */\r\n    public get<T>(key: ContainerKey<T> | string, params?: any, options?: CreateOptions): T {\r\n        this.validateKey(key);\r\n        return this.resolveSingleDependency<T>(key, params, options);\r\n    }\r\n\r\n    /**\r\n     * Resolve a function arguments and call it\r\n     * \r\n     * @param {object} [params] The supplied parameters will be used directly instead of being resolved\r\n     */\r\n    public call(foo: Function, thisArg?: any, params?: any, options?: CreateOptions): any {\r\n        const dependencies = this.resolveDependencies(foo, params, options);\r\n        return foo.apply(thisArg, dependencies);\r\n    }\r\n\r\n    // --- private methods --- //\r\n\r\n    private validateKey(key: ContainerKey<any>): void {\r\n        if (typeof key !== 'string' && typeof key !== 'function' && typeof key !== 'symbol')\r\n            throw new Error(`Invalid argument '${\"key\"}'. Expected string, symbol or function. Received: ${JSON.stringify(key)}.`);\r\n    }\r\n\r\n    private getKeyString(key: ContainerKey<any>): string {\r\n        if (typeof key === 'string')\r\n            return key;\r\n        if (typeof key === 'function')\r\n            return key.name;\r\n        return key.toString();\r\n    }\r\n\r\n    /**\r\n     * resolve dependency using:\r\n     * 1. parameters supplied by caller\r\n     * 2. registered factories\r\n     * 3. registered singletons\r\n     * 4. construct\r\n     */\r\n    private resolveSingleDependency<T>(key: ContainerKey<T>, params: any, options: CreateOptions): T {\r\n        const keyStr = this.getKeyString(key);\r\n        params = params || {};\r\n        options = options || {};\r\n\r\n        // from params\r\n        const fromParams = params[keyStr];\r\n        if (fromParams !== undefined) {\r\n            this.logger(`Resolving '${keyStr}' from params`);\r\n            return fromParams;\r\n        }\r\n\r\n        // from factories\r\n        const factory = this.factories.get(key);\r\n        if (factory !== undefined) {\r\n            this.logger(`Resolving '${keyStr}' from internal registry`);\r\n            return this.resolveFactory(key, factory);\r\n        }\r\n\r\n        // from singletons\r\n        const singleton = this.singletons.get(key);\r\n        if (singleton !== undefined) {\r\n            this.logger(`Resolving '${keyStr}' from internal registry (singleton)`);\r\n            return singleton;\r\n        }\r\n\r\n        // from singleton factories\r\n        const singletonFactory = this.potentialSingletons.get(key);\r\n        if (singletonFactory !== undefined) {\r\n            this.logger(`Resolving '${keyStr}' from internal registry (singleton factory)`);\r\n            return this.resolveSingletonFactory(key, singletonFactory);\r\n        }\r\n\r\n        // dependency not registered...\r\n\r\n        // construct\r\n        if (this.constructUnregistered && typeof key === 'function') {\r\n            this.logger(`Resolving '${keyStr}' by invoking as constructor`);\r\n            return this.resolveCTor(key, params, options);\r\n        }\r\n\r\n        // treat as optional parameter\r\n        if (options.optionalParameters) {\r\n            this.logger(`Resolving '${keyStr}' as optional parameter (undefined)`);\r\n            return undefined;\r\n        }\r\n\r\n        throw new ResolveError(keyStr, new Error('Dependency is not registered.'));\r\n    }\r\n\r\n    private resolveFactory<T>(key: ContainerKey<T>, factory: Factory<T>): T {\r\n        try {\r\n            return factory();\r\n        } catch (e) {\r\n            const keyStr = this.getKeyString(key);\r\n            throw new ResolveError(keyStr, e);\r\n        }\r\n    }\r\n\r\n    private resolveSingletonFactory<T>(key: ContainerKey<T>, singletonFactory: Factory<T>): T {\r\n        const keyStr = this.getKeyString(key);\r\n\r\n        // create the singleton\r\n        let singleton;\r\n        try {\r\n            singleton = singletonFactory();\r\n        } catch (e) {\r\n            throw new ResolveError(keyStr, e);\r\n        }\r\n\r\n        // cache it\r\n        try {\r\n            this.singletons.set(key, singleton);\r\n        } catch (e) {\r\n            throw new ResolveError(keyStr, e);\r\n        }\r\n\r\n        // delete the singleton factory\r\n        this.potentialSingletons.delete(key);\r\n\r\n        return singleton;\r\n    }\r\n\r\n    private resolveCTor<T>(ctor: Constructor<T>, params: any, options: CreateOptions): T {\r\n        const dependencies = this.resolveDependencies(ctor, params, options);\r\n\r\n        if (Resolver.canReflect) {\r\n            return Reflect.construct(ctor, dependencies);\r\n        } else {\r\n\r\n            // a workaround to allow calling a constructor through .apply\r\n            // see: http://stackoverflow.com/questions/1606797/use-of-apply-with-new-operator-is-this-possible\r\n            // tslint:disable-next-line:variable-name\r\n            const MiddlemanCTor = function (this: any) {\r\n                ctor.apply(this, dependencies);\r\n            };\r\n\r\n            MiddlemanCTor.prototype = ctor.prototype;\r\n\r\n            return new (MiddlemanCTor as any)();\r\n        }\r\n    }\r\n\r\n    private resolveDependencies(func: Function, params: any, options: CreateOptions): any[] {\r\n        if (typeof func !== 'function')\r\n            throw new Error(`Invalid argument '${\"func\"}'. Expected function.`);\r\n\r\n        const args = this.getArgumentKeys(func);\r\n\r\n        const dependencies: any[] = [];\r\n        for (const argKey of args) {\r\n\r\n            let dependency: any;\r\n            try {\r\n                dependency = this.resolveSingleDependency(argKey, params, options);\r\n            } catch (e) {\r\n                throw new ResolveError(func.name || '<anonymous>', e);\r\n            }\r\n\r\n            dependencies.push(dependency);\r\n        }\r\n        return dependencies;\r\n    }\r\n\r\n    private getArgumentKeys(func: Function): any[] {\r\n\r\n        const argNames = this.getArgumentNames(func);\r\n        const argTypes = this.getArgumentTypes(func);\r\n\r\n        // no type information\r\n        if (!argTypes || !argTypes.length)\r\n            return argNames;\r\n\r\n        // mismatch length - unknown error\r\n        if (argNames.length !== argTypes.length)\r\n            throw new Error('Failed reflecting function arguments.');\r\n\r\n        // fill missing type info by using argument name\r\n        const args = argTypes.map((type, index) => {\r\n\r\n            if (!type)\r\n                throw new TypeInferenceError(`Can not infer type of argument in index ${index} of the function '${func.name}'.`);\r\n\r\n            // primitives are never registered as dependency...\r\n            if (type.name !== 'Object' && type.name !== 'String')\r\n                return type;\r\n\r\n            return argNames[index];\r\n        });\r\n\r\n        // log\r\n        const argsStr = args.map(arg => {\r\n            if (typeof arg === 'function')\r\n                return arg.name;\r\n            return arg;\r\n        });\r\n        this.logger(`Arguments of '${func.name}': ${JSON.stringify(argsStr)}`);\r\n\r\n        // return\r\n        return args;\r\n    }\r\n\r\n    private getArgumentNames(func: Function): string[] {\r\n\r\n        // original regex from require.js\r\n        const FN_ARGS = /^function\\s*?[^\\(]*?\\(\\s*?([^\\)]*?)\\)/m;\r\n        const CLASS_CTOR_ARGS = /^class[\\s\\S]*?constructor\\s*?[^\\(]*?\\(\\s*?([^\\)]*?)\\)/m;\r\n\r\n        const functionArgsRegex = func.toString().match(FN_ARGS);\r\n        const classArgsRegex = func.toString().match(CLASS_CTOR_ARGS);\r\n\r\n        let args;\r\n        if (classArgsRegex && classArgsRegex.length) {\r\n            this.logger(`Function '${func.name}' declared as es5 class`);\r\n            args = classArgsRegex[1];\r\n        } else if (functionArgsRegex && functionArgsRegex.length) {\r\n            this.logger(`Function '${func.name}' declared as standard function`);\r\n            args = functionArgsRegex[1];\r\n        } else {\r\n            // Get here if:\r\n            // 1. It's a class declaration but no constructor was specified\r\n            // 2. Unknown parse error... Should improve the regex...\r\n            this.logger(`Could not detect arguments of '${func.name}'`);\r\n            return [];\r\n        }\r\n\r\n        args = args.split(',')\r\n            .map(str => str.trim())\r\n            .filter(arg => arg !== '');\r\n\r\n        return args;\r\n    }\r\n\r\n    private getArgumentTypes(func: Function): Function[] {\r\n\r\n        if (Resolver.canReflect) {\r\n\r\n            // https://www.typescriptlang.org/docs/handbook/decorators.html#metadata\r\n            return Reflect.getMetadata('design:paramtypes', func);\r\n        }\r\n\r\n        return [];\r\n    }\r\n}\r\n/* tslint:enable */","module.exports = require(\"reflect-metadata\");"],"sourceRoot":""}